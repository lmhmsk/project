{"version":3,"sources":["page/index.js","App.js","reportWebVitals.js","index.js"],"names":["Index","className","href","App","basename","process","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAiEeA,EA5DD,WAGV,OACI,sBAAKC,UAAU,OAAf,UACG,sDACC,sBAAKA,UAAU,OAAf,iDAGI,sBAAKA,UAAU,MAAf,sEAEI,qBAAKA,UAAU,MAAf,gEAEJ,sBAAKA,UAAU,MAAf,+CAEI,qBAAKA,UAAU,MAAf,oGAEJ,qBAAKA,UAAU,MAAf,SACA,mBAAGC,KAAK,yCAAR,kDAIJ,sBAAKD,UAAU,OAAf,wEAGI,sBAAKA,UAAU,MAAf,kEAEI,qBAAKA,UAAU,MAAf,gEAEJ,sBAAKA,UAAU,MAAf,8DAEA,qBAAKA,UAAU,MAAf,+EAEA,sBAAKA,UAAU,MAAf,oDAEA,qBAAKA,UAAU,MAAf,0EAEA,sBAAKA,UAAU,MAAf,+CAEA,qBAAKA,UAAU,MAAf,mDAEA,sBAAKA,UAAU,MAAf,yDAEA,qBAAKA,UAAU,MAAf,gEAEA,sBAAKA,UAAU,MAAf,qCAEA,qBAAKA,UAAU,MAAf,wBACA,qBAAKA,UAAU,MAAf,6BAGA,qBAAKA,UAAU,MAAf,SACA,mBAAGC,KAAK,0CAAR,sD,eCzCDC,MAXf,WACE,OACE,mCACA,cAAC,IAAD,CAAeC,SAAUC,WAAzB,SACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWR,SCGxBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5141de21.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./index.css\"\r\n\r\n\r\n\r\nconst Index = () => {\r\n \r\n\r\n    return(\r\n        <div className='main'>\r\n           <h1> Project (Personal) </h1>\r\n            <div className='list'>\r\n                \r\n                1. React + Mock-adapter + Typescript  \r\n                <div className='dsc'>\r\n                1. 로그인  (id: userid1, password: password1) \r\n                    <div className='dtl'>- fake-data +  mock-adapter 로 구현</div>\r\n                </div>\r\n                <div className='dsc'>\r\n                2. 문의 리스트 \r\n                    <div className='dtl'>- fake-data +  mock-adapter 로 검색, select 기능 구현  </div>\r\n                </div>\r\n                <div className='dsc'>\r\n                <a href='https://lmhmsk.github.io/mock-adapter/' >자세히 보기</a>  \r\n                </div>\r\n               \r\n            </div>\r\n            <div className='list'>\r\n                \r\n            2. React + Redux + Styled-components + Typescript + Node.js \r\n                <div className='dsc'>\r\n                1. 로그인  (back-end 준비 중) \r\n                    <div className='dtl'>- 로그인 및 token 발행 </div>\r\n                </div>\r\n                <div className='dsc'>\r\n                2. 회원가입 (준비 중)\r\n                <div className='dtl'>- 정규 체크, 중복 체크 등 </div>\r\n                </div>\r\n                <div className='dsc'>\r\n                3. 페이지네이션 \r\n                <div className='dtl'>- JSONPlacheholder 사용하여 구현 </div>\r\n                </div>\r\n                <div className='dsc'>\r\n                4. 무한 스크롤 \r\n                <div className='dtl'> - kakao 도서 검색</div>\r\n                </div>\r\n                <div className='dsc'>\r\n                5. 폼 추가 (진행 중)\r\n                <div className='dtl'> - redux 사용하여 구현 </div>\r\n                </div>\r\n                <div className='dsc'> \r\n                컴포넌트  \r\n                <div className='dtl'> 1. Modal </div>\r\n                <div className='dtl'> 2. loading </div>\r\n                </div>\r\n                \r\n                <div className='dsc'>\r\n                <a href='https://lmhmsk.github.io/client-server/' >자세히 보기</a>  \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index","\nimport Index from './page';\nimport { Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Route path='/' exact component={Index} />\n    </BrowserRouter>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}